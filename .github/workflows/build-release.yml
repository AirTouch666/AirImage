name: Build and Release

on:
  push:
    tags:
      - 'v*'  

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest] 
        python-version: [3.9]  

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3  

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt  

    - name: Build executable with PyInstaller
      run: |
        pyinstaller --onefile run.py  
      shell: bash

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: built-executable-${{ matrix.os }}  
        path: |
          dist/run.exe  # Windows 上的路径
          dist/run  # Ubuntu 和 macOS 上的路径

  release:
    needs: build
    runs-on: ubuntu-latest  
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Download build artifacts for Windows
      uses: actions/download-artifact@v3
      with:
        name: built-executable-windows-latest

    - name: Download build artifacts for Ubuntu
      uses: actions/download-artifact@v3
      with:
        name: built-executable-ubuntu-latest

    - name: Download build artifacts for macOS
      uses: actions/download-artifact@v3
      with:
        name: built-executable-macos-latest

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        release_name: 'AirImage ${{ github.ref_name }} Release'  
        draft: false
        prerelease: false

    - name: Upload Release Asset for Windows
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: built-executable-windows-latest/run.exe  
        asset_name: AirImage-windows.exe
        asset_content_type: application/octet-stream

    - name: Upload Release Asset for Ubuntu
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: built-executable-ubuntu-latest/run  
        asset_name: AirImage-ubuntu
        asset_content_type: application/octet-stream

    - name: Upload Release Asset for macOS
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: built-executable-macos-latest/run  
        asset_name: AirImage-macos
        asset_content_type: application/octet-stream
        