name: Build and Release to Branch

on:
  push:
    tags:
      - 'v*'  

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest] 
        python-version: [3.9]  

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt  

    - name: Build executable with PyInstaller
      run: |
        python build.py
      shell: bash

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: built-executable-${{ matrix.os }}
        path: |
          dist/run.exe  
          dist/run  

  push_to_release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository on release branch
      uses: actions/checkout@v3
      with:
        ref: release 

    - name: Download build artifacts for Windows
      uses: actions/download-artifact@v3
      with:
        name: built-executable-windows-latest

    - name: Download build artifacts for Ubuntu
      uses: actions/download-artifact@v3
      with:
        name: built-executable-ubuntu-latest

    - name: Download build artifacts for macOS
      uses: actions/download-artifact@v3
      with:
        name: built-executable-macos-latest

    - name: Copy artifacts to the repo
      run: |
        mkdir -p build-output
        cp run.exe build-output/AirImage-windows.exe  
        cp run build-output/AirImage-ubuntu
        cp run build-output/AirImage-macos

    - name: Configure Git
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"

    - name: Commit and push changes
      run: |
        git add build-output/*
        git commit -m "Add built executables for ${{ github.ref_name }}"
        git push origin release  